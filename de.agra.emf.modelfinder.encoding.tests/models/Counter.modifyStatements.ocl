import Counter : 'Counter.ecore#/'

package Counter

context Counter::count():
    post countpost1: self.value = 1 + self.value@pre
--    post: Counter.allInstances()->size() = Counter.allInstances@pre()->size() + 1
    post modifyProperties : self.value
--    post modifyObjects : Counter.allInstances()

context Counter::count2():
    post countpost1: self.value = 2 + self.value@pre
    post modifyProperties : self.value

context Counter::count3():
    post countpost1: self.value = 3 + self.value@pre
    post modifyProperties : self.value

context Counter
    inv bound: self.value < 16
    inv bound: self.value >= 0
--    inv: not self.a.oclIsUndefined()
--    inv: if self = self then if true then true else self = self endif else true endif

endpackage
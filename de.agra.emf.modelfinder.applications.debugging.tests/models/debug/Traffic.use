model TrafficLight

enum Direction { NorthSouth, WestEast }

class TrafficLight
attributes
  direction: Direction
constraints
  inv i1: direction.isDefined()
  inv i2: not( pedestrianLight.greenLight = true and carLight.greenLight = true )
  inv i3: carLight.greenLight = true implies TrafficLight.allInstances()->forAll( tl | tl.direction <> self.direction implies tl.pedestrianLight.greenLight = false )
end

class PedestrianLight
attributes
  redLight: Boolean
  greenLight: Boolean
operations
  switch()
  pre p1: redLight = true or greenLight = true
  post po1: redLight@pre = true implies redLight = false
  post po2: redLight@pre = true implies greenLight = true
  post po3: redLight@pre = false implies redLight = true
  post po4: redLight@pre = false implies greenLight = false
  post po5: CarLight.allInstances()->forAll( cl | cl.redLight = cl.redLight@pre )
  post po6: CarLight.allInstances()->forAll( cl | cl.yellowLight = cl.yellowLight@pre )
  post po7: CarLight.allInstances()->forAll( cl | cl.greenLight = cl.greenLight@pre )
--  post po8: PedestrianLight.allInstances()->forAll( pl | pl <> self implies pl.redLight = pl.redLight@pre )
--  post po9: PedestrianLight.allInstances()->forAll( pl | pl <> self implies pl.greenLight = pl.greenLight@pre )
  post po10: TrafficLight.allInstances()->forAll( tl | tl.direction = tl.direction@pre )
constraints
  inv i1: not( redLight = true and greenLight = true )
  inv i2: redLight.isDefined() and greenLight.isDefined()
end

class CarLight
attributes
  redLight: Boolean
  yellowLight: Boolean
  greenLight: Boolean
operations
  switchRedToRedYellow()
  pre p1: redLight = true
  pre p2: yellowLight = false
  pre p3: greenLight = false
  post po1: redLight = true
  post po2: yellowLight = true
  post po3: greenLight = false
--  post po4: CarLight.allInstances()->forAll( cl | cl <> self implies cl.redLight = cl.redLight@pre )
--  post po5: CarLight.allInstances()->forAll( cl | cl <> self implies cl.yellowLight = cl.yellowLight@pre )
--  post po6: CarLight.allInstances()->forAll( cl | cl <> self implies cl.greenLight = cl.greenLight@pre )
  post po7: PedestrianLight.allInstances()->forAll( pl | pl.redLight = pl.redLight@pre )
  post po8: PedestrianLight.allInstances()->forAll( pl | pl.greenLight = pl.greenLight@pre )  
  post po9: TrafficLight.allInstances()->forAll( tl | tl.direction = tl.direction@pre )
  switchRedYellowToGreen()
  pre p1: redLight = true
  pre p2: yellowLight = true
  pre p3: greenLight = false
  post po1: redLight = false
  post po2: yellowLight = false
  post po3: greenLight = true
--  post po4: CarLight.allInstances()->forAll( cl | cl <> self implies cl.redLight = cl.redLight@pre )
--  post po5: CarLight.allInstances()->forAll( cl | cl <> self implies cl.yellowLight = cl.yellowLight@pre )
--  post po6: CarLight.allInstances()->forAll( cl | cl <> self implies cl.greenLight = cl.greenLight@pre )
  post po7: PedestrianLight.allInstances()->forAll( pl | pl.redLight = pl.redLight@pre )
  post po8: PedestrianLight.allInstances()->forAll( pl | pl.greenLight = pl.greenLight@pre )  
  post po9: TrafficLight.allInstances()->forAll( tl | tl.direction = tl.direction@pre )
  switchGreenToYellow()
  pre p1: redLight = false
  pre p2: yellowLight = false
  pre p3: greenLight = true
  post po1: redLight = false
  post po2: yellowLight = true
  post po3: greenLight = false
--  post po4: CarLight.allInstances()->forAll( cl | cl <> self implies cl.redLight = cl.redLight@pre )
--  post po5: CarLight.allInstances()->forAll( cl | cl <> self implies cl.yellowLight = cl.yellowLight@pre )
--  post po6: CarLight.allInstances()->forAll( cl | cl <> self implies cl.greenLight = cl.greenLight@pre )
  post po7: PedestrianLight.allInstances()->forAll( pl | pl.redLight = pl.redLight@pre )
  post po8: PedestrianLight.allInstances()->forAll( pl | pl.greenLight = pl.greenLight@pre )  
  post po9: TrafficLight.allInstances()->forAll( tl | tl.direction = tl.direction@pre )
  switchYellowToRed()
  pre p1: redLight = false
  pre p2: yellowLight = true
  pre p3: greenLight = false
  post po1: redLight = true
  post po2: yellowLight = false
  post po3: greenLight = false
--  post po4: CarLight.allInstances()->forAll( cl | cl <> self implies cl.redLight = cl.redLight@pre )
--  post po5: CarLight.allInstances()->forAll( cl | cl <> self implies cl.yellowLight = cl.yellowLight@pre )
--  post po6: CarLight.allInstances()->forAll( cl | cl <> self implies cl.greenLight = cl.greenLight@pre )
  post po7: PedestrianLight.allInstances()->forAll( pl | pl.redLight = pl.redLight@pre )
  post po8: PedestrianLight.allInstances()->forAll( pl | pl.greenLight = pl.greenLight@pre )  
  post po9: TrafficLight.allInstances()->forAll( tl | tl.direction = tl.direction@pre )
constraints
  inv i1: not( redLight = true and greenLight = true )
  inv i2: redLight.isDefined() and yellowLight.isDefined() and greenLight.isDefined()
end

association HasPedLight between
  TrafficLight[1] role trafficLight
  PedestrianLight[1] role pedestrianLight
end

association HasCarLight between
  TrafficLight[1] role trafficLight
  CarLight[1] role carLight
end
